这是所有页面中最复杂的，综合能力最强，也是其他平台的跳板。

先将页面：
页面由：

查询界面：

listView 用来显示数据库的信息的。
在程序运行起来后双击第一列数据，能进入更改其数据的页面。


操作界面：

数据1和下面的textbox 
用来模糊查询，比如对方想知道某个值的数据，不知道在哪里，但只知道对应的栏，比如我要查找全部性别为女的数据。就可以在这里输入女则就会模糊查找到你想要的数据。当然前提是你根据这些所更改了查询的语句以及用户界面进行专栏的相对填上你所需要的栏，供代码查询。

查询按钮是指上面的模糊查询按钮，

删除则是，将上面所筛选到的全部进行删除的代码。切记切记，是上面的模糊查询后显示的全部数据进行删除。

添加新数据就是跳转添加数据那个页面。

删除所有数据，就如同字面意思一样。

刷新页面，我觉得刷新就是重新查找一遍，所以本质上刷新页面就是查询所有的页面的意思。



代码部分：
与之前重复的内容我不会再说了，请参考之前的文档

 private TextBox[] fuzzyOprationTB;//模糊查询的textbox
这句，因为为了能够再扩充的地方少写一些代码以及更方便于后期扩充内容，就将所有处理的内容进行隔离，不管扩充多少，处理部分代码不会有问题，关键是存数据这块需要按照自己的题目或者需求更改需要存取的数据栏数以及存取。这里先抛砖引玉一波，看到后期的代码你们就能明白了。

Dictionary<int,string>map_int2string;
Dictionary<int,string>map_FuzzySentence

这两句话要到后面具体应用，你们才会明白这两句怎么用。
在这里先按下不表。

在构造函数中进行初始化以及赋值什么的不说了，就是注意要更改变量名的时候请注意更改相应的变量名

如果点击到了增加数据的button则调用跳转到增加数据页面的函数，JumpForm_AddData_AndHideForm();这个函数能够跳转页面从而暂时隐藏此函数，在那个页面关闭的时候这个页面出现。
而本省的函数没什么好说的，注意变量名的更改。

如果点击删除所有数据的button则调用：button_deleteAllData_Click(object sender, EventArgs e)此函数
里面就是进行删除数据库的语句以及方法。注意更改变量名称请注意 是 变量名.属性(或方法名)，所以更改的是前面，别都改了，都改了就不是调用这个方法了。


SelectAllData()函数则是在三个地方调用，一个是出现页面的时候直接调用查询并显示数据，所以在构造函数中调用了这个方法，一个是在刷新的button中进行调用。

注意再次强调：这个函数里的变量名更改，以及若要更改相对应的操作页面上的变量名的时候请，现在操作页面上更改在到代码里面更改，最后在它自动生成的代码文件里面改，若不是这样会很麻烦。

listView_Show.Colums.Add("第一数据")
若多于三个请自己添加相应数据。
并且将“”内部的字符改为相应的数据库中的对应的字符，比如数据库中为sex表示性别，这里则为“性别”,注意一一对应。

以及下面那的string textData3=DataReader[2]同上需要自己添加。

以及item.SubItems.Add(textData3)请自行操作。


JimpUpdateDatabaseForm()这个函数用于跳转到更改数据的那一个页面。所以内容为创造更新的页面并显示。

listView_Show_SelectedIndexChanged(object sender, EventArgs e)
这个函数就是当你点击第一列的时候进行的调用以及将你点击的字符串提取到，传到更新页面中。
不用更改任何的东西，除非是在这个项目写的函数名称，以及变量名。

button_Refresh_Click(object sender, EventArgs e)刷新页面调用查询所有的数据并显示的函数。

Form_SystemIn_Shown(object sender, EventArgs e)这是指一开始进入到这个系统中需要干的事情，由页面提供相应函数。



重点来了：
button_FuzzySelect_Click(object sender, EventArgs e)
这是用来模糊查询的页面。


这里插一个题外话：从这里就知道了map_FuzzySentence怎么用了，这是一个查询用的哈希映射，1对应着查找，2对应着删除如果还需要其他的语句就可以增加，在Start_FuzzySentence()里面。自己增加。

因为在模糊查询中最关键的则是如何将这些零散的语句整合在一起，所有就需要整合语句的函数CombineSentence(string s,int state)
起初我写了两个一个是整合查询语句的，一个是用来整合删除语句的，后来我发现这两个函数基本上一样，除了变量不一样，我就想我能不能优化成一个函数。所以那个变量就整合在一起成为变量组，或者是哈希组，通过不同的函数来使用。比如上面说的模糊查询的函数来。则就可以将查询的字符串传到函数中，并且告诉它是那个状态 

1表示查询 2表示删除

然后通过不同的变量组的状态值完成相应的操作。

从而用一个函数就能完成两个函数的需求了。


而说到合并语句函数
首先就是为了更好的扩展以及使用这个代码的人不用管内部的处理，则就需要很难得操作。但是我最终想到了方法，就是数组的遍历。将页面中的textbox进行整合为一个数组，就可以通过数组遍历来查找数据

但是合并的一些字词语句毕竟不是数组，也没办法进行整合，那如何让数字以及字符串对应上呢？我就想到了用映射也就map思想或者为哈希的思想。用数字唯一标识并且对应相应的数据库查询语句。

所以map_int2string从而诞生。这就是为了整合数据库里面可能要用到的一些字词，因为条件查询的条件不为唯一，而这么做的话，就只需要检查对应的textbox是否为空为空则条件中没有。

而使用这段代码的用户不必在意如何处理，只需要更改所有整合数据部分的函数，进行自行添加就可以完成功能。

这点想通了，则合并语句就剩下字符串的按条件拼接了。

而解决了这个问题
button_FuzzySelect_Click(object sender, EventArgs e)也就是查询函数就按照所合并的查询语句查找并且找到相应的数据全部显示就完成了。


模糊删除语句同理。